% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/metastores.R
\docType{data}
\name{metastores}
\alias{metastores}
\title{A metastore is the top-level container of objects in Unity Catalog. It stores
data assets (tables and views) and the permissions that govern access to
them. Databricks account admins can create metastores and assign them to
Databricks workspaces to control which workloads use each metastore. For a
workspace to use Unity Catalog, it must have a Unity Catalog metastore
attached.}
\format{
An object of class \code{list} of length 11.
}
\usage{
metastores
}
\description{
Each metastore is configured with a root storage location in a cloud storage
account. This storage location is used for metadata and managed tables data.
}
\details{
NOTE: This metastore is distinct from the metastore included in Databricks
workspaces created before Unity Catalog was released. If your workspace
includes a legacy Hive metastore, the data in that metastore is available in
a catalog named hive_metastore.
}
\section{Operations}{

\tabular{ll}{
\link[=metastores_assign]{assign} \tab Create an assignment.\cr
\link[=metastores_create]{create} \tab Create a metastore.\cr
\link[=metastores_current]{current} \tab Get metastore assignment for workspace.\cr
\link[=metastores_delete]{delete} \tab Delete a metastore.\cr
\link[=metastores_get]{get} \tab Get a metastore.\cr
\link[=metastores_list]{list} \tab List metastores.\cr
\link[=metastores_maintenance]{maintenance} \tab Enables or disables auto maintenance on the metastore.\cr
\link[=metastores_summary]{summary} \tab Get a metastore summary.\cr
\link[=metastores_unassign]{unassign} \tab Delete an assignment.\cr
\link[=metastores_update]{update} \tab Update a metastore.\cr
\link[=metastores_update_assignment]{update_assignment} \tab Update an assignment.\cr
}
}

\keyword{datasets}
