% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/storage_credentials.R
\docType{data}
\name{storage_credentials}
\alias{storage_credentials}
\title{A storage credential represents an authentication and authorization mechanism
for accessing data stored on your cloud tenant. Each storage credential is
subject to Unity Catalog access-control policies that control which users and
groups can access the credential. If a user does not have access to a storage
credential in Unity Catalog, the request fails and Unity Catalog does not
attempt to authenticate to your cloud tenant on the userâ€™s behalf.}
\format{
An object of class \code{list} of length 6.
}
\usage{
storage_credentials
}
\description{
Databricks recommends using external locations rather than using storage
credentials directly.
}
\details{
To create storage credentials, you must be a Databricks account admin. The
account admin who creates the storage credential can delegate ownership to
another user or group to manage permissions on it.
}
\section{Operations}{

\tabular{ll}{
\link[=storage_credentials_create]{create} \tab Create a storage credential.\cr
\link[=storage_credentials_delete]{delete} \tab Delete a credential.\cr
\link[=storage_credentials_get]{get} \tab Get a credential.\cr
\link[=storage_credentials_list]{list} \tab List credentials.\cr
\link[=storage_credentials_update]{update} \tab Update a credential.\cr
\link[=storage_credentials_validate]{validate} \tab Validate a storage credential.\cr
}
}

\keyword{datasets}
